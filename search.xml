<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于我</title>
    <url>/about-me/</url>
    <content><![CDATA[<h2 id="信息"><a href="#信息" class="headerlink" title="信息"></a>信息</h2><p>出生：1999年</p>
<p>专业：物联网工程</p>
<p>酷安ID：DD王</p>
<p>github: <a href="http://github.com/wiidede">wiidede</a></p>
<h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><p>大学：家庭服务机器人项目（ROS、深度学习）</p>
<p>某监控公司：实习中，前端</p>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>网站</tag>
        <tag>wiidede</tag>
      </tags>
  </entry>
  <entry>
    <title>网站ToDo</title>
    <url>/blog-todo-list/</url>
    <content><![CDATA[<h1 id="网站ToDo"><a href="#网站ToDo" class="headerlink" title="网站ToDo"></a>网站ToDo</h1><ul>
<li><input disabled="" type="checkbox"> hexo-SEO优化，参考Ayer主题作者的<a href="https://shen-yu.gitee.io/2020/hexo-seo/">文章</a></li>
<li><input checked="" disabled="" type="checkbox"> 关于的页面，以及侧边栏导航</li>
<li><input checked="" disabled="" type="checkbox"> 打赏仅在指定文章出现</li>
</ul>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>网站</tag>
        <tag>ToDo</tag>
      </tags>
  </entry>
  <entry>
    <title>关于RSS的一些想法</title>
    <url>/thinking-about-rss/</url>
    <content><![CDATA[<h1 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h1><p>个人理解：一个网站发布内容，用户自行选择内容接受</p>
<h1 id="网站生成RSS"><a href="#网站生成RSS" class="headerlink" title="网站生成RSS"></a>网站生成RSS</h1><p>hexo插件生成 <a href="/atom.xml">本网站RSS</a></p>
<h1 id="APP的选择"><a href="#APP的选择" class="headerlink" title="APP的选择"></a>APP的选择</h1><p>暂无</p>
<h1 id="源管理-推荐"><a href="#源管理-推荐" class="headerlink" title="源管理/推荐"></a>源管理/推荐</h1><p>害，现在能有啥简单的阅读呢</p>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>网站</tag>
        <tag>RSS</tag>
      </tags>
  </entry>
  <entry>
    <title>监听剪贴板 在文字中匹配相应的内容 适用于题库</title>
    <url>/Python/listen-the-clipboard-and-match/</url>
    <content><![CDATA[<h1 id="监听剪贴板-在文字中匹配相应的内容-适用于题库"><a href="#监听剪贴板-在文字中匹配相应的内容-适用于题库" class="headerlink" title="监听剪贴板 在文字中匹配相应的内容 适用于题库"></a>监听剪贴板 在文字中匹配相应的内容 适用于题库</h1><p>最近有考试，还有题库，我就把之前写的监听剪贴板来搜索题库的程序拿了出来。虽然可能你更希望直接帮你答好，但有些网站只有一次考试机会，所以监听剪贴板反而更通用，虽然你 <code>ctrl + c</code> 可能会按的有点累，但总比一题一题搜（<code>ctrl + c</code> <code>切换到题库</code> <code>ctrl + f</code>   <code>ctrl + v</code>）快一点</p>
<p>当然如果你有更好的方法也可以留言或者告诉我</p>
<p>注意，如果网页不让你复制，不让你选择文字，请先安装油猴插件，再安装<a href="https://greasyfork.org/zh-CN/scripts/28497-remove-web-limits-modified">文字限制解除</a></p>
<p>话不多说，很简单的代码直接上了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    lastClipContent = <span class="literal">None</span></span><br><span class="line">    txt = open(<span class="string">&quot;xxxxxxxxxxxxx题库.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        clipContent = pyperclip.paste()</span><br><span class="line">        <span class="keyword">if</span> clipContent != lastClipContent:</span><br><span class="line">            lastClipContent = clipContent</span><br><span class="line">            reg = <span class="string">r&#x27;```[^```]+&#x27;</span> + clipContent + <span class="string">r&#x27;.*?```&#x27;</span></span><br><span class="line">            regPattern = re.compile(reg, re.S | re.M)</span><br><span class="line">            result = regPattern.findall(txt)</span><br><span class="line">            <span class="keyword">if</span> result:</span><br><span class="line">                print(<span class="string">&#x27;\n\n------------------------&#x27;</span>)</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">                    print(item.replace(<span class="string">&#x27;```&#x27;</span>, <span class="string">&#x27;&#x27;</span>))</span><br><span class="line">                print(<span class="string">&#x27;------------------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>其中关于正则表示的原理可以参考<a href="/Python/reg-about-match-the-forward/">这里</a></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
        <tag>Python</tag>
        <tag>监听剪贴板</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式 向前最短匹配</title>
    <url>/Python/reg-about-match-the-forward/</url>
    <content><![CDATA[<h1 id="正则表达式-向前最短匹配"><a href="#正则表达式-向前最短匹配" class="headerlink" title="正则表达式 向前最短匹配"></a>正则表达式 向前最短匹配</h1><p>使用正则表达式  <code>.*?</code>  可以向后匹配最短的，那么如何向前匹配最短的呢</p>
<p>向前的不再能使用 <code>.*?</code> ，因为它会从第一个字母向后找，直到有匹配的，也就相当于找了一个最长的匹配</p>
<p>所以这时候应该换一种思路</p>
<p>使用 <code>a[^a]+</code> 来匹配，也就是说要匹配的字符串前面不能有a，那就是最短的匹配</p>
<p>我们来看一个 Python 写的例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">reg = <span class="string">r&#x27;```[^```]+&#x27;</span> + clipContent + <span class="string">r&#x27;.*?```&#x27;</span></span><br></pre></td></tr></table></figure>

<p>我们要从 <code>clipContent</code> 向前找到第一次出现 ```` ` ，所以思路应该是向前找到第一个你所想要的内容</p>
<p><a href="/Python/listen-the-clipboard-and-match/">这里</a>有一个实际案例</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>git 本地切换帐号</title>
    <url>/%E5%85%B6%E4%BB%96/git-change-local-account/</url>
    <content><![CDATA[<h2 id="git-切换本地帐号"><a href="#git-切换本地帐号" class="headerlink" title="git 切换本地帐号"></a>git 切换本地帐号</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --<span class="built_in">local</span> user.name wiidede</span><br><span class="line">git config --<span class="built_in">local</span> user.email wiixdede@gmail.com</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>整理一些css样式</title>
    <url>/%E5%89%8D%E7%AB%AF/several-css-style/</url>
    <content><![CDATA[<h1 id="整理一些css样式"><a href="#整理一些css样式" class="headerlink" title="整理一些css样式"></a>整理一些css样式</h1><h3 id="渐变文字"><a href="#渐变文字" class="headerlink" title="渐变文字"></a>渐变文字</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(360<span class="selector-tag">deg</span>, <span class="selector-id">#97E9FF</span> 0%, <span class="selector-id">#FFFFFF</span> 100%);</span><br><span class="line"><span class="selector-tag">-webkit-background-clip</span>: <span class="selector-tag">text</span>;</span><br><span class="line"><span class="selector-tag">-webkit-text-fill-color</span>: <span class="selector-tag">transparent</span>;</span><br></pre></td></tr></table></figure>

<h3 id="文字阴影"><a href="#文字阴影" class="headerlink" title="文字阴影"></a>文字阴影</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">text-shadow</span>: 0 0 12<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(24, 230, 255, 0<span class="selector-class">.63</span>);</span><br></pre></td></tr></table></figure>

<h3 id="适应多种情况的自动换行"><a href="#适应多种情况的自动换行" class="headerlink" title="适应多种情况的自动换行"></a>适应多种情况的自动换行</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">word-break</span>: <span class="selector-tag">keep-all</span>;</span><br><span class="line"><span class="selector-tag">word-wrap</span>: <span class="selector-tag">break-word</span>;</span><br><span class="line"><span class="selector-tag">white-space</span>: <span class="selector-tag">pre-wrap</span>;</span><br></pre></td></tr></table></figure>

<h3 id="小天才的margin呢"><a href="#小天才的margin呢" class="headerlink" title="小天才的margin呢"></a>小天才的margin呢</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.iconfont</span> + <span class="selector-class">.iconfont</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>vue隔代组件层层动态插槽并且附带数据</title>
    <url>/%E5%89%8D%E7%AB%AF/vue-slot-with-two-generation/</url>
    <content><![CDATA[<h1 id="vue隔代组件层层动态插槽并且附带数据"><a href="#vue隔代组件层层动态插槽并且附带数据" class="headerlink" title="vue隔代组件层层动态插槽并且附带数据"></a>vue隔代组件层层动态插槽并且附带数据</h1><p>最近写代码，孙子组件有插槽，想要在爷爷组件里面往孙子组件里面插东西，发现插不进去，于是在父组件也建立了一个插槽。</p>
<p>比较特殊的地方在于这个插槽的名字是动态的，而且可能不止一个（v-for根据数据循环判断有多少插槽）</p>
<h4 id="孙子组件"><a href="#孙子组件" class="headerlink" title="孙子组件"></a>孙子组件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div v-for&#x3D;&quot;(item,index) in config&quot; :key&#x3D;index&gt;</span><br><span class="line">	&lt;span v-if&#x3D;&quot;item.custom&quot;&gt;</span><br><span class="line">        &lt;slot :name&#x3D;&quot;item.custom&quot; :value&#x3D;&quot;item.key&quot; :index&#x3D;&quot;index&quot;&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">	&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p>可以看到，孙子组件的具名插槽的名字是动态的，其实也就是由爷爷组件提供的</p>
<h3 id="子组件"><a href="#子组件" class="headerlink" title="子组件"></a>子组件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template v-for&#x3D;&quot;item in config&quot; v-slot:[item]&#x3D;&quot;value&quot;&gt;</span><br><span class="line">	&lt;slot :name&#x3D;&quot;item&quot; :value&#x3D;&quot;value.value&quot;&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure>

<p>父组件是一个桥梁，根据数据得到相应需要有的插槽数来创建模板插入孙子组件，由于孙子组件的插槽名是动态的，所以，这里使用v-slot指令，插槽名为item对应的值，同时附带孙子组件的value值。</p>
<p>而模板里面又是一个插槽供爷爷组件进行插入，名字依旧是动态的item的值，附带从孙子组件得到的value</p>
<h3 id="爷爷组件"><a href="#爷爷组件" class="headerlink" title="爷爷组件"></a>爷爷组件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template v-slot:slot-name-one&#x3D;&quot;value&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;slot-name-one&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;value&quot;&gt;&#123;&#123; value.value &#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;value&quot;&gt;&#123;&#123; value.value &#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;template v-slot:slot-name-two&#x3D;&quot;value&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;slot-name-two&quot;&gt;</span><br><span class="line">        &lt;div :class&#x3D;&quot;value.value &#x3D;&#x3D;&#x3D; &#39;a&#39; ? &#39;a&#39; : &#39;other&#39;&quot;&gt;&#123;&#123; value.value &#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure>

<p>这样爷爷组件就可以尽情的往孙子组件插入了</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
        <tag>slot</tag>
      </tags>
  </entry>
</search>
